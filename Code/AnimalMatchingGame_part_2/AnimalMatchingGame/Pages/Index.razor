@page "/"

<PageTitle>Animal Matching Game</PageTitle>

<style>

    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<div class="container">
    <div class="row">
        @for (var animalNumber = 0;
        animalNumber < shuffledAnimals.Count;
        animalNumber++)
        {
            var animal = shuffledAnimals[animalNumber];
            var uniqueDescription =
            $"Button #{animalNumber}";
            <div class="col-3">
                <button type="button"  
                @onclick="@(() => 
                    ButtonClick(animal, uniqueDescription))"
                                class="btn btn-outline-dark">
                    <h1>@animal</h1>
                </button>
            </div>
        }
    </div>
    <div class="row">
        <h2>Matches found: @matchesFound</h2>
    </div>
</div>

@code {

    List<string> shuffledAnimals = new();
    int matchesFound = 0;

    private void SetUpGame()
    {
        shuffledAnimals = animalEmoji
          .OrderBy(item => Random.Shared.Next())
          .ToList();
        matchesFound = 0;
    }

    protected override void OnInitialized()
    {
        SetUpGame();
    }

    List<string> animalEmoji = new()
  {
    "🐶","🐶",
    "🐺","🐺",
    "🐮","🐮",
    "🦊","🦊",
    "🐱","🐱",
    "🦁","🦁",
    "🐯","🐯",
    "🐹","🐹",
  };

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;
    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            // First selection of the pair. Remember it.
            lastAnimalFound = animal;
            lastDescription = animalDescription;
        }
        else if ((lastAnimalFound == animal)
              && (animalDescription != lastDescription))
        {
            // Match found! Reset for next pair.
            lastAnimalFound = string.Empty;

            // Replace found animals with empty string to hide them.
            shuffledAnimals = shuffledAnimals
          .Select(a => a.Replace(animal, string.Empty))
          .ToList();
            matchesFound++;
            if (matchesFound == 8)
            {
                SetUpGame();
            }
        }
        else
        {
            // User selected a pair that don't match, reset selection.
            lastAnimalFound = string.Empty;
        }
    }
}